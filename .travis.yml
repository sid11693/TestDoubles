# TestDoubles

# language setting
language: node_js

# version numbers to test against
node_js:
    - 0.10.25

# only build for the master Git branch
branches:
  only:
    - master

# environment variables for build
env:
  secure: smU0JKfAsxI1Z3kUqUhYcv/WeLs3X9NHcXc0c0zQ32RzO5li2hrGjCXviIGUZ1ENy6OoWAZDM3gXjwROEE3Z6l+aOxvjE3JVR8fpTcv6R65QcLYYEH1qN9FxucwCKYzgvtCYwHLT/njP7x2j80M9dPrJCteEJyyccgyzvy/v0rxJcVjxYN37y+izrZgVzeSJx9C3bcyXPTMPWfMqaeqaB6aDu6sVhTvRcNYqPiQF5Xp/jcrOivqTEFZ+iUXcuom5krvNkn/aaI1a2yVwU5D3P5iBDNgU51VmFZjX7ru3plcNdEly6uh7/vZ0rqHEiXc0sFlXI9XmDOuAZQI3PC7SrQ==

# Keep all installation steps in Dockerfile and avoid here
before_install:
    - make setup

install:
#    - npm install
# after_install:

before_script:
    - mkdir -p shippable/testresults
    - mkdir -p shippable/codecoverage

script:
    - make npm-test
    - echo $PULL_REQUEST
    - if [ $PULL_REQUEST != 0 ]; then make npm-testrelease; fi
    - if [ $PULL_REQUEST == 0 ]; then make npm-release; fi
#Use npm-testprodrelease target above to test npm publishing without updating the "latest" tag

#Shippable executes npm test automatically, output should be in jUnit (test) and Cobertura (coverage) formats
# after_success:
# after_failure:
# after_script:
